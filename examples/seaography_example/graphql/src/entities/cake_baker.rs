//! `SeaORM` Entity. Generated by pgorm-codegen 0.12.1

use pgorm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[pgorm(table_name = "cake_baker")]
pub struct Model {
    #[pgorm(primary_key, auto_increment = false)]
    pub cake_id: i32,
    #[pgorm(primary_key, auto_increment = false)]
    pub baker_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[pgorm(
        belongs_to = "super::baker::Entity",
        from = "Column::BakerId",
        to = "super::baker::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Baker,
    #[pgorm(
        belongs_to = "super::cake::Entity",
        from = "Column::CakeId",
        to = "super::cake::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Cake,
}

impl Related<super::baker::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Baker.def()
    }
}

impl Related<super::cake::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Cake.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {
    #[pgorm(entity = "super::baker::Entity")]
    Baker,
    #[pgorm(entity = "super::cake::Entity")]
    Cake,
}
