[workspace]
members = [".", "pgorm-macros", "pgorm-codegen", "pgorm-migration"]

[package]
name = "pgorm"
version = "0.1.0"
authors = []
edition = "2021"
description = "üêö An async & dynamic ORM for Rust"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/pgorm"
# repository = "https://github.com/-/pgorm"
categories = ["database"]
keywords = ["async", "orm", "mysql", "postgres", "sqlite"]
rust-version = "1.65"

[package.metadata.docs.rs]
features = ["default", "sqlx-all", "mock", "proxy", "runtime-async-std-native-tls", "postgres-array", "pgorm-internal"]
rustdoc-args = ["--cfg", "docsrs"]

[lib]
name = "pgorm"
path = "src/lib.rs"

[dependencies]
async-stream = { version = "0.3", default-features = false }
async-trait = { version = "0.1", default-features = false }
chrono = { version = "0.4.30", default-features = false, optional = true }
time = { version = "0.3.36", default-features = false, optional = true }
futures = { version = "0.3", default-features = false, features = ["std"] }
log = { version = "0.4", default-features = false }
tracing = { version = "0.1", default-features = false, features = ["attributes", "log"] }
rust_decimal = { version = "1", features = ["db-tokio-postgres"], default-features = false, optional = true }
bigdecimal = { version = "0.3", default-features = false, optional = true }
pgorm-macros = { version = "~1.0.0", path = "pgorm-macros", default-features = false, features = ["strum"] }
pgorm-query = { path = "../pgorm-query", default-features = false, features = ["derive"] }
sea-query-binder = { version = "0.6.0", default-features = false, optional = true }
strum = { version = "0.26", default-features = false }
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0", default-features = false, optional = true }
# sqlx = { version = "0.7", default-features = false, optional = true }
uuid = { version = "1", default-features = false, optional = true }
# ouroboros = { version = "0.17", default-features = false }
url = { version = "2.2", default-features = false }
thiserror = { version = "1", default-features = false }
# deadpool = { version = "0.12.1" }
tokio = { version = "1.6", features = ["full"] }
tokio-postgres = { version = "0.7.11", features = ["with-uuid-1", "with-chrono-0_4", "with-serde_json-1", "array-impls"] }
deadpool-postgres = "0.14.0"
bytes = "1.7.1"

[dev-dependencies]
smol = { version = "1.2" }
smol-potat = { version = "1.1" }
async-std = { version = "1", features = ["attributes", "tokio1"] }
futures = { version = "0.3" }
tokio = { version = "1.6", features = ["full"] }
actix-rt = { version = "2.2.0" }
maplit = { version = "1" }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
pgorm = { path = ".", features = ["debug-print", "tests-cfg", "postgres-array", "pgorm-internal"] }
pretty_assertions = { version = "0.7" }
time = { version = "0.3.36", features = ["macros"] }
uuid = { version = "1", features = ["v4"] }
once_cell = "1.8"
arraystring = "0.3"
dotenv = "0.15"

[features]
debug-print = []
default = [
    "macros",
    "with-json",
    "with-chrono",
    "with-rust_decimal",
    "postgres-array",
    "with-uuid",
    "runtime-tokio",
    "macros"
]
macros = ["pgorm-macros/derive"]
proxy = ["serde_json", "serde/derive"]
with-json = ["serde_json", "chrono?/serde", "time?/serde", "uuid?/serde"]
with-chrono = ["chrono"]
with-rust_decimal = ["rust_decimal"]
with-uuid = ["uuid"]
postgres-array = []
json-array = []
pgorm-internal = []
runtime-tokio = []
tests-cfg = []

# This allows us to develop using a local version of sea-query
# [patch.crates-io]
# pgorm-query = { path = "../sea-query" }
